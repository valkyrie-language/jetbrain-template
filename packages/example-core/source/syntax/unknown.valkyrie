⁜package⸬a;
⁜module⸬a;
⁜dependency⸬a;

&a
⁋a
⍝ ⁙a


⍝ ※a

1 == 1;
1 != 1;
1 >  1;
1 <= 1;
1 >= 1;
1 <  1;
1 >= 1;
1 <= 1;

⁋str;
¶str;
❡str;

*&str

2 × 3 / 2

⸿action.main.name;
❡action.main.name;



¶x + ¶y

if ¬x {

}

⍝ value¡

match value {
    case Some(s): return s
    case None():  None
}

value!

⍝ value.unwrap_unchecked

⍝ a!?.b()


⍝ 20?
⍝
⍝ 20¿.b()

⍝ ※

⍝ ¿?

let 𖧄 = 0;

let 𖢣 = 1;

𖢐 𖢑 𖢒 𖢓 𖢔 𖢕  𖢖 𖢗 𖢘 𖢙 𖢚 𖢛  𖢜 𖢝 𖢞 𖢟 𖢠 𖢡  𖢢 𖢣 𖢤 𖢥 𖢦 𖢧  𖢨 𖢩 𖢪 𖢫 𖢬 𖢭 𖢮 𖢯 𖢰 𖢱 𖢲 𖢳  𖢴 𖢵 𖢶 𖢷 𖢸 𖢹
⍝ ☢ ☣
𖤝

a × b
loop ※outer while a {
    break ※outer
}

A
is List⟨String⟩
as List⟨String⟩
.count()

let Some(a) = b else {

}
